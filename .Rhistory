cleanData <- lower(cleanData)
?alllower
?lowercase
??lowercase
dim(cleanData)
names(cleanData)
quantiale(cleanData$Interest.Rate)
quantile(cleanData$Interest.Rate)
type(cleanData$Interest.Rate)
class(cleanData)
sapply(cleanData[,1],class())
sapply(cleanData[,1],class)
sapply(cleanData[1,],class)
quantile(cleanData$Amount.Requested)
table(cleanData$Amount.Requested ~ cleanData$Amount.Funded.By.Investors)
table(cleanData$Amount.Requested,cleanData$Amount.Funded.By.Investors)
quantile(table(cleanData$Amount.Requested,cleanData$Amount.Funded.By.Investors))
sub(".","",names(cleanData),)
names(cleanData)
sub(".","",names(cleanData),)
gsub(".","",names(cleanData),)
names(cleanData)
plot(cleanData$interest.rate)
plot(cleanData$Interest.Rate)
max(cleanData$Interest.Rate)
plot(cleanData$Amount.Funded.By.Investors)
plot(cleanData$Amount.Funded.By.Investors ~ cleanData$Amount.Requeste)
plot(cleanData$Amount.Funded.By.Investors ~ cleanData$Amount.Requested)
plot(cleanData$Amount.Funded.By.Investors ~ cleanData$Monthly.Income)
names(cleanData)
plot(cleanData$Amount.Funded.By.Investors ~ cleanData$FICO.Range)
cut2
cut2
?cut2
?cut
x <- cleanData
plot(x$Interest.Rate, x$FICO.Range, pch=19)
plot(x$Monthly.Incom, x$FICO.Range, pch=19)
plot(x$Monthly.Income, x$FICO.Range, pch=19)
x$State
unique(x$State)
classes(cleanData)
sapply(cleanData[1,],class)
x$Interest.Rate <- as.numeric(as.character(x$Interest.Rate))
class(x$Interest.Rate)
x$Loan.Length <- as.numeric(as.character(x$Loan.Length))
x$Debt.To.Income.Ratio <- as.numeric(as.character(x$Debt.To.Income.Ratio))
x$FICO.Range <- as.numeric(as.character(x$FICO.Range))
x$Employment.Length <- as.numeric(as.character(x$Employment.Length))
sum(is.na(x))
y <- na.omit(x)
x <- cleanData
x <- na.omit(x)
sum(is.na(x))
summary(x)
min(x$Amount.Funded.By.investors)
min(x$Amount.Funded.By.Investors)
x$Amount.Funded.By.Investors
sum(x$Amount.Funded.By.Investors==0.00)
sum(x$Amount.Funded.By.Investors== -0.01)
sum(x$Amount.Funded.By.Investors == x$Amount.Requested)
)sum(x$Amount.Funded.By.Investors == x$Amount.Requested)) / 2498
sapply(cleanData[1,],class)
plot(x$Interest.Rate, x$Amount.Funded, pch = 19)
plot(x$Interest.Rate, x$Amount.Funded, pch = 1)
plot(x$Interest.Rate, x$Amount.Funded)
plot(x$Interest.Rate, x$Amount.Funded, pch = 19)
plot(x$Interest.Rate, x$Employment.Length, pch = 19)
plot(x$Interest.Rate, x$FICO.Range, pch = 19)
hist(x$Interest.Rate, x$FICO.Range, pch = 19)
hist(x$Interest.Rate, x$Home.Ownership, pch = 19)
plot(x$Interest.Rate, x$Home.Ownership, pch = 19)
plot(x$Interest.Rate, x$Home.Ownership)
plot(x$Interest.Rate, x$Employment.Length, pch = 19)
plot(x$Interest.Rate, x$Amount.Funded.By.Investors, pch = 19)
plot(x$Interest.Rate ~ x$Amount.Funded.By.Investors)
hist(x$Amount.Funded.By.Investors)
lmNoAdjust <- lm(x$Interest.Rate ~ x$FICO.Range)
lmNoAdjust <- lm(x$Monthly.Income~ x$FICO.Range)
lmNoAdjust <- lm(x$Monthly.Income ~ x$FICO.Range)
plot(x$FICO.Range, lmNoAdjust$Monthly.Income, pch = 19)
sapply(cleanData[1,],class)
z <- cleanData
z$Interest.Rate <- cut2(x$Interest.Rate, g = 5)
package(Hmisc)
library(Hmisc)
library(Hmisc)
q()
library(Hmisc)
install.packages("Hmisc")
packages(Hmisc)
library(Hmisc)
z$Interest.Rate <- cut2(x$Interest.Rate, g = 5)
z$Interest.Rate
x$Interest.Rate
z$Interest.Rate <- cut2(x$Interest.Rate, g = 5)
z$Interest.Rate <- cut(x$Interest.Rate, g = 5)
lmFinal <- lm(z$Interest.Rate ~ z$FICO.Ranges)
lmFinal <- lm(z$Interest.Rate ~ z$Monthly.Income)
plot(x$FICO.Range, x$Interest.Rate)
table(x$FICO.Range, x$Interest.Rate)
names(x)
q()
sapply(cleanData[1,],class)
x$Interest.Rate
x$Amount.Requested
new <- read.csv("./Coursera I/loanData2.csv")
new <- read.csv("./Coursera I/data/loanData2.csv")
new <- read.csv("./Coursera I/data/loansData2.csv")
CleanNew <- omit.na(new)
CleanNew <- na.omit(new)
sapply(CleanNew[1,],class)
table(CleanNew$FICO.Range, CleanNew$Interest.Rate)
plot(CleanNew$FICO.Range, CleanNew$Interest.Rate)
x <- CleanNew
names(x)
plot(x$Interest.Rate, x$FICO.Rate)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
rwd()
wd()
getwd()
setwd("~/Dropbox/DataScience-Repo")
read.csv(hw1_data.csv)
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
dataframe <- read.csv("hw1_data.csv")
is.na(dataframe["Ozone"])
count(is.na(dataframe["Ozone"]))
sum(is.na(dataframe["Ozone"]) == TRUE)
mean(dataframe["Ozone"], na.rm = TRUE)
getwd()
setwd("~/Dropbox/DataScience-Repo/specdata/") # set wd
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory <- getwd()
# initialize pollutant vector
mean_v <- c()
# find all files in folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i])
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_v <- c(mean_v, na_removed)
}
result <- mean(mean_v)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/specdata/") # set wd
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory <- getwd()
# initialize pollutant vector
mean_v <- c()
# find all files in folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- try(read.csv(file_paths[i]))
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_v <- c(mean_v, na_removed)
}
result <- mean(mean_v)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
source.with.encoding('~/Dropbox/DataScience-Repo/pollutantmean.R', encoding='UTF-8')
setwd("~/Dropbox/DataScience-Repo/specdata/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, getwd(), fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/specdata") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, getwd(), fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, getwd(), fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/"), fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, getwd(), fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dropbox/DataScience-Repo/") # set wd
directory <- "~/Dropbox/DataScience-Repo/"
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
pollutantmean(dir, "sulfate", 1:10)
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
dir <- "~/Dropbox/DataScience-Repo/specdata/"
pollutantmean(dir, "sulfate", 1:10)
dir <- "~/Dropbox/DataScience-Repo/specdata"
pollutantmean(dir, "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
dir <- 0
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
completeSub <- function(directory, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
obsClean <- na.omit(frame)
obsCleanCount <- nrow(obsClean)
list(id = id, nobs = obsCleanCount)
}
complete <- function(directory, id = 1:332) {
completeLists <- Map(function(id) completeSub(directory, id), id)
matrix <- do.call(rbind, completeLists)
as.data.frame(matrix)
}
dir <- "~/Dropbox/DataScience-Repo/specdata"
#complete(dir, c(2, 4, 8, 10, 12))
complete(dir, c(2, 4, 8, 10, 12))
corrSub <- function(directory, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
na.omit(frame)
}
corr <- function(directory, threshold = 0) {
frames <- Map(function(threshold) corrSub(directory, threshold), 1:332)
framesAboveThreshold <- Filter(function(frame) dim(frame)[1] > threshold, frames)
correlationList <- Map(function(frame) { cor(frame$sulfate, frame$nitrate)}, framesAboveThreshold)
correlations <- unlist(correlationList)
if (length(correlations) > 0) correlations
else vector("numeric", 0)
}
#dir <- "~/Dropbox/DataScience-Repo/specdata"
dir <- "~/Dropbox/DataScience-Repo/specdata"
head(corr(dir, 150))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
1
setwd("~/Dropbox/DataScience-Repo/") # set wd
directory <- "~/Dropbox/DataScience-Repo/"
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
dir <- "~/Dropbox/DataScience-Repo/specdata"
submit()
dir <- "~/Dropbox/DataScience-Repo/specdata"
pollutantmean(dir, "sulfate", 1:10)
submit()
completeSub <- function(directory, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
obsClean <- na.omit(frame)
obsCleanCount <- nrow(obsClean)
list(id = id, nobs = obsCleanCount)
}
complete <- function(directory, id = 1:332) {
completeLists <- Map(function(id) completeSub(directory, id), id)
matrix <- do.call(rbind, completeLists)
as.data.frame(matrix)
}
# To test..
#dir <- "~/Dropbox/DataScience-Repo/specdata"
#complete(dir, c(2, 4, 8, 10, 12))
#complete(dir, 30:25)
#complete(dir, 3)
submit()
6
submit()
submit()
corrSub <- function(directory, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
na.omit(frame)
}
corr <- function(directory, threshold = 0) {
frames <- Map(function(threshold) corrSub(directory, threshold), 1:332)
framesAboveThreshold <- Filter(function(frame) dim(frame)[1] > threshold, frames)
correlationList <- Map(function(frame) { cor(frame$sulfate, frame$nitrate)}, framesAboveThreshold)
correlations <- unlist(correlationList)
if (length(correlations) > 0) correlations
else vector("numeric", 0)
}
# To test..
#dir <- "~/Dropbox/DataScience-Repo/specdata"
#head(corr(dir, 150))
#summary(corr(dir, 150))
#head(corr(dir, 400))
#summary(corr(dir, 400))
#summary(corr(dir, 5000))
#length(corr(dir, 5000))
#summary(corr(dir))
#length(corr(dir))
submit()
submit()
submit()
getwd()
pollutants <- function(directory, pollutant, id) {
fileName <- paste(formatC(id, width = 3, flag = "0"), ".csv", sep = "")
filePath <- paste(directory, "/", fileName, sep = "")
frame <- read.csv(filePath)
pollutantData <- frame[[pollutant]]
pollutantData[!is.na(pollutantData)]
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantLists <- sapply(id, function(id) pollutants(directory, pollutant, id))
pollutants <- unlist(pollutantLists)
mean(pollutants)
}
# Tests #
#dir <- "~/Dropbox/DataScience-Repo/specdata"
#pollutantmean(dir, "sulfate", 1:10)
#pollutantmean(dir, "nitrate", 70:72)
#pollutantmean(dir, "nitrate", 23)
submit()
submit()
submit()
submit()
load.package(Iris)
library(datasets)
data(iris)
?iris
?iris
iris
dataset <- iris
dataset[Species = Virginica]
dataset[Species = virginica]
dataset[Species = "virginica""]
dataset[Species = "virginica"]
bla <- iris
bla <- iris$virginica
bla
?subset()
important <- subset(iris, Species = "virginica")
important
important <- subset(iris, Species == "virginica")
important
?mean()
mean(important)
mean(important[Sepal.Length])
describe(important)
sapply(important, mean)
?apply
library(datasets)
data(mtcars)
new <- data(mtcars)
new
?mtcars
new
data(mtcars)
mtcars
new <- data(mtcars)
new
mtcars
